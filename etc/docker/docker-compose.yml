version: '3.7'

name: arslan-vms
services:
  vms-lb:
    image: nginx:1.21
    container_name: vms-load-balancer-container
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - vms-administration 
      - vms-identity
      - vms-inventory
      - vms-order
      - vms-payment
      - vms-planner
      - vms-product
      - vms-vehicle
      - vms-gateway-web
      - vms-web
    restart: on-failure
    networks:
      - arslan.vms-network

  vms-administration:
    image: arslan.vms/service-administration:latest
    container_name: vms-service-administration-container
    build:
      context: ../../
      dockerfile: services/administration/src/Arslan.Vms.AdministrationService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - App__SelfUrl=https://vms-st-administration
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public
      - RemoteServices__AbpIdentity__BaseUrl=vms-st-identity
      - RemoteServices__AbpIdentity__UseCurrentAccessToken=false
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - AuthServer__Authority=http://vms-st-authserver
      - AuthServer__RequireHttpsMetadata=false
      - IdentityClients__Default__Authority=http://vms-st-identity
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_AdministrationService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks: 
      - arslan.vms-network
  
  vms-identity:
    image: arslan.vms/service-identity:latest
    container_name: vms-service-identity-container
    build:
      context: ../../
      dockerfile: services/identity/src/Arslan.Vms.IdentityService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - App__SelfUrl=https://vms-st-identity
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public
      - AuthServer__Authority=http://vms-st-authserver
      - AuthServer__RequireHttpsMetadata=false
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - ConnectionStrings__IdentityService=Server=mssql-db;Database=VmsIdentity;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_IdentityService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
      - IdentityServerClients__Web__RootUrl=https://vms-st-web
      - IdentityServerClients__PublicWeb__RootUrl=https://vms-st-public-web
      - IdentityServerClients__WebGateway__RootUrl=https://vms-st-gateway-web
      - IdentityServerClients__PublicWebGateway__RootUrl=https://vms-st-gateway-web-public
      - IdentityServerClients__IdentityService__RootUrl=https://vms-st-identity
      - IdentityServerClients__AdministrationService__RootUrl=https://vms-st-administration
      - IdentityServerClients__AccountService__RootUrl=https://vms-st-authserver
      - IdentityServerClients__CatalogService__RootUrl=https://vms-st-catalog
      - IdentityServerClients__BasketService__RootUrl=https://vms-st-basket     
      - IdentityServerClients__OrderingService__RootUrl=https://vms-st-ordering
      - IdentityServerClients__CmskitService__RootUrl=https://vms-st-cmskit
      - IdentityServerClients__PaymentService__RootUrl=https://vms-st-payment
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks: 
      - arslan.vms-network
  
  vms-inventory:
    image: arslan.vms/service-inventory:latest
    container_name: vms-service-inventory-container
    build:
      context: ../../
      dockerfile: services/inventory/src/Arslan.Vms.InventoryService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80;http://+:81;
      - App__SelfUrl=https://vms-st-catalog
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public
      - AuthServer__Authority=http://vms-st-authserver
      - AuthServer__RequireHttpsMetadata=false
      - Kestrel__EndPoints__Http__Url=http://docker.host.internal:80
      - Kestrel__EndPoints__gRPC__Url=http://docker.host.internal:81
      - Kestrel__EndPoints__gRPC__Protocols=Http2
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - ConnectionStrings__InventoryService=Server=mssql-db;Database=VmsInventory;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_InventoryService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure  
    networks: 
      - arslan.vms-network
  
  vms-order:
    image: arslan.vms/service-order:latest
    container_name: vms-service-order-container
    build:
      context: ../../
      dockerfile: services/order/src/Arslan.Vms.OrderService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - App__SelfUrl=https://vms-st-basket
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public
      - RemoteServices__Catalog__BaseUrl=http://vms-st-catalog:80
      - RemoteServices__Catalog__GrpcUrl=http://vms-st-catalog:81
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - ConnectionStrings__OrderService=Server=mssql-db;Database=VmsOrder;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_OrderService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure  
    networks: 
      - arslan.vms-network
  
  vms-payment:
    image: arslan.vms/service-payment:latest
    container_name: vms-service-payment-container
    build:
      context: ../../
      dockerfile: services/payment/src/Arslan.Vms.PaymentService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80;
      - App__SelfUrl=https://vms-st-ordering
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - ConnectionStrings__PaymentService=Server=mssql-db;Database=VmsPayment;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_PaymentService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure  
    networks: 
      - arslan.vms-network
  
  vms-planner:
    image: arslan.vms/service-planner:latest
    container_name: vms-service-planner-container
    build:
      context: ../../
      dockerfile: services/planner/src/Arslan.Vms.PlannerService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80;
      - App__SelfUrl=https://vms-st-cmskit
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - ConnectionStrings__PlannerService=Server=mssql-db;Database=VmsPlanner;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_PlannerService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure  
    networks: 
      - arslan.vms-network
  
  vms-product:
    image: arslan.vms/service-product:latest
    container_name: vms-service-product-container
    build:
      context: ../../
      dockerfile: services/product/src/Arslan.Vms.ProductService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80;
      - App__SelfUrl=https://vms-st-payment
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public   
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - ConnectionStrings__ProductService=Server=mssql-db;Database=VmsProduct;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_ProductService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure  
    networks: 
      - arslan.vms-network

  vms-vehicle:
    image: arslan.vms/service-vehicle:latest
    container_name: vms-service-vehicle-container
    build:
      context: ../../
      dockerfile: services/vehicle/src/Arslan.Vms.VehicleService.HttpApi.Host/Dockerfile
    environment:
      # - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80;
      - App__SelfUrl=https://vms-st-payment
      - App__CorsOrigins=http://vms-gateway-web,vms-gateway-web-public    
      - ConnectionStrings__AdministrationService=Server=mssql-db;Database=VmsAdministration;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - ConnectionStrings__VehicleService=Server=mssql-db;Database=VmsVehicle;UID=sa;PASSWORD=1q2w3E**;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - RabbitMQ__Connections__Default__HostName=rabbitmq
      - RabbitMQ__EventBus__ClientName=Evc_VehicleService
      - RabbitMQ__EventBus__ExchangeName=Arslan.Vms
      - Redis__IsEnabled=true
      - Redis__Configuration=redis
    depends_on:
      redis:
        condition: service_healthy
      mssql-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure  
    networks: 
      - arslan.vms-network
 
  vms-gateway-web:
    image: arslan.vms/gateway-web:latest
    container_name: vms-gateway-web-container
    build:
      context: ../../
      dockerfile: gateways/web/src/Arslan.Vms.WebGateway/Dockerfile
    environment:
      #- ASPNETCORE_ENVIRONMENT=Docker # Yarp can't resolve dns, needs to be overridden
      - ASPNETCORE_ENVIRONMENT=development-docker
      - ASPNETCORE_URLS=http://+:80;
      - App__CorsOrigins=http://vms-web
      - App__PathBase=/evc/api
      - ConnectionStrings__AdministrationService=Server=192.168.56.1;Database=EvcAdministration;UID=sa;PASSWORD=1;Integrated Security=True;Trusted_Connection=False;TrustServerCertificate=True;Pooling=True;Max Pool Size=1000;Timeout=300
      - AuthServer__Authority=http://gio.local.io:8080/realms
      - AuthServer__RequireHttpsMetadata=false
      - AuthServer__Audience=evc
      - RabbitMQ__Connections__Default__HostName=192.168.56.1
      - RabbitMQ__EventBus__ClientName=Evc_Gateway
      - RabbitMQ__EventBus__ExchangeName=Evc
      - Redis__IsEnabled=true
      - Redis__Configuration=192.168.56.1
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft=Information
      - Logging__LogLevel__Microsoft.Hosting.Lifetime=Information
      - AuthServer__SwaggerClientId=vms-webgateway-swagger
      - AuthServer__SwaggerClientSecret=l2fmvDb3iSmfS98rawvbHyZnbmS81tUL
      - Serilog__MinimumLevel__Default=Information
      - Serilog__MinimumLevel__Override__Microsoft=Information
      - Serilog__MinimumLevel__Override__System=Information
      - Serilog__MinimumLevel__Override__Microsoft.EntityFrameworkCore=Information
      - Serilog__Enrich__0=FromLogContext
      - Serilog__WriteTo__0__Name=Graylog
      - Serilog__WriteTo__0__Args__hostnameOrAddress=192.168.56.1
      - Serilog__WriteTo__0__Args__port=12201
      - Serilog__WriteTo__0__Args__transportType=Udp
      - Serilog__WriteTo__0__Args__inventory=evc
      - Serilog__WriteTo__1__Name=Console
      - Serilog__Properties__Application=Centralized logging application
      - Serilog__AllowedHosts=*
      - AbpAuditingOptions__IsEnabled=true
      - AbpAuditingOptions__IsEnabledForGetRequests=true
      - AbpAuditingOptions__IsEnabledForIntegrationServices=false
      - AbpAuditingOptions__HideErrors=true
      - AbpAuditingOptions__IsEnabledForAnonymousUsers=true
      - AbpAuditingOptions__AlwaysLogOnException=true
      - AbpAuditingOptions__DisableLogActionInfo=false
      - AbpAuditingOptions__ApplicationName=
      - ReverseProxy__Routes__AdministrationService__Match__Path=/administration/{*any}
      - ReverseProxy__Routes__AdministrationService__ClusterId=administrationCluster
      - ReverseProxy__Routes__AdministrationService__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__AdministrationService__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__AdministrationService__Transforms__1__Proto=Append
      - ReverseProxy__Routes__IdentityService__Match__Path=/identity/{*any}
      - ReverseProxy__Routes__IdentityService__ClusterId=identityCluster
      - ReverseProxy__Routes__IdentityService__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__IdentityService__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__IdentityService__Transforms__1__Proto=Append
      - ReverseProxy__Routes__Inventory__Match__Path=/inventory/{*any}
      - ReverseProxy__Routes__Inventory__ClusterId=inventoryCluster
      - ReverseProxy__Routes__Inventory__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__Inventory__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__Inventory__Transforms__1__Proto=Append
      - ReverseProxy__Routes__Order__Match__Path=/order/{*any}
      - ReverseProxy__Routes__Order__ClusterId=orderCluster
      - ReverseProxy__Routes__Order__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__Order__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__Order__Transforms__1__Proto=Append
      - ReverseProxy__Routes__Payment__Match__Path=/payment/{*any}
      - ReverseProxy__Routes__Payment__ClusterId=paymentCluster
      - ReverseProxy__Routes__Payment__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__Payment__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__Payment__Transforms__1__Proto=Append
      - ReverseProxy__Routes__Planner__Match__Path=/planner/{*any}
      - ReverseProxy__Routes__Planner__ClusterId=plannerCluster
      - ReverseProxy__Routes__Planner__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__Planner__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__Planner__Transforms__1__Proto=Append
      - ReverseProxy__Routes__Product__Match__Path=/product/{*any}
      - ReverseProxy__Routes__Product__ClusterId=productCluster
      - ReverseProxy__Routes__Product__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__Product__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__Product__Transforms__1__Proto=Append
      - ReverseProxy__Routes__Vehicle__Match__Path=/vehicle/{*any}
      - ReverseProxy__Routes__Vehicle__ClusterId=vehicleCluster
      - ReverseProxy__Routes__Vehicle__Transforms__0__PathPrefix=/evc/api
      - ReverseProxy__Routes__Vehicle__Transforms__1__X-Forwarded=Set
      - ReverseProxy__Routes__Vehicle__Transforms__1__Proto=Append
      - ReverseProxy__Routes__abp-route__Match__Path=/api/abp/{*any}
      - ReverseProxy__Routes__abp-route__ClusterId=administrationCluster
      - ReverseProxy__Routes__tenant-management-route__Match__Path=/api/tenant-management/{*any}
      - ReverseProxy__Routes__tenant-management-route__ClusterId=administrationCluster
      - ReverseProxy__Routes__feature-management-route__Match__Path=/api/feature-management/{*any}
      - ReverseProxy__Routes__feature-management-route__ClusterId=administrationCluster
      - ReverseProxy__Routes__permission-management-route__Match__Path=/api/permission-management/{*any}
      - ReverseProxy__Routes__permission-management-route__ClusterId=administrationCluster
      - ReverseProxy__Routes__setting-management-route__Match__Path=/api/setting-management/{*any}
      - ReverseProxy__Routes__setting-management-route__ClusterId=administrationCluster
      - ReverseProxy__Routes__SwaggerAdministrationService__Match__Path=/swagger/administrationCluster/{*any}
      - ReverseProxy__Routes__SwaggerAdministrationService__ClusterId=administrationCluster
      - ReverseProxy__Routes__SwaggerAdministrationService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerAdministrationService__Transforms__1__PathRemovePrefix=/swagger/administrationCluster
      - ReverseProxy__Routes__SwaggerIdentityService__Match__Path=/swagger/identityCluster/{*any}
      - ReverseProxy__Routes__SwaggerIdentityService__ClusterId=identityCluster
      - ReverseProxy__Routes__SwaggerIdentityService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerIdentityService__Transforms__1__PathRemovePrefix=/swagger/identityCluster
      - ReverseProxy__Routes__SwaggerInventoryService__Match__Path=/swagger/inventoryCluster/{*any}
      - ReverseProxy__Routes__SwaggerInventoryService__ClusterId=inventoryCluster
      - ReverseProxy__Routes__SwaggerInventoryService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerInventoryService__Transforms__1__PathRemovePrefix=/swagger/inventoryCluster
      - ReverseProxy__Routes__SwaggerOrderService__Match__Path=/swagger/orderCluster/{*any}
      - ReverseProxy__Routes__SwaggerOrderService__ClusterId=orderCluster
      - ReverseProxy__Routes__SwaggerOrderService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerOrderService__Transforms__1__PathRemovePrefix=/swagger/orderCluster
      - ReverseProxy__Routes__SwaggerPaymentService__Match__Path=/swagger/paymentCluster/{*any}
      - ReverseProxy__Routes__SwaggerPaymentService__ClusterId=paymentCluster
      - ReverseProxy__Routes__SwaggerPaymentService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerPaymentService__Transforms__1__PathRemovePrefix=/swagger/paymentCluster
      - ReverseProxy__Routes__SwaggerPlannerService__Match__Path=/swagger/plannerCluster/{*any}
      - ReverseProxy__Routes__SwaggerPlannerService__ClusterId=plannerCluster
      - ReverseProxy__Routes__SwaggerPlannerService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerPlannerService__Transforms__1__PathRemovePrefix=/swagger/plannerCluster
      - ReverseProxy__Routes__SwaggerProductService__Match__Path=/swagger/productCluster/{*any}
      - ReverseProxy__Routes__SwaggerProductService__ClusterId=productCluster
      - ReverseProxy__Routes__SwaggerProductService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerProductService__Transforms__1__PathRemovePrefix=/swagger/productCluster
      - ReverseProxy__Routes__SwaggerVehicleService__Match__Path=/swagger/vehicleCluster/{*any}
      - ReverseProxy__Routes__SwaggerVehicleService__ClusterId=vehicleCluster
      - ReverseProxy__Routes__SwaggerVehicleService__Transforms__0__PathRemovePrefix=/evc/api
      - ReverseProxy__Routes__SwaggerVehicleService__Transforms__1__PathRemovePrefix=/swagger/vehicleCluster
      - ReverseProxy__Clusters__administrationCluster__Destinations__destination1__Address=http://vms-administration
      - ReverseProxy__Clusters__administrationCluster__HttpRequest__ActivityTimeout=00:05:00
      - ReverseProxy__Clusters__identityCluster__Destinations__destination1__Address=http://vms-identity
      - ReverseProxy__Clusters__identityCluster__HttpRequest__ActivityTimeout=00:05:00
      - ReverseProxy__Clusters__inventoryCluster__Destinations__destination1__Address=http://vms-inventory
      - ReverseProxy__Clusters__inventoryCluster__HttpRequest__ActivityTimeout=00:05:00
      - ReverseProxy__Clusters__orderCluster__Destinations__destination1__Address=http://vms-order
      - ReverseProxy__Clusters__orderCluster__HttpRequest__ActivityTimeout=00:05:00
      - ReverseProxy__Clusters__paymentCluster__Destinations__destination1__Address=http://payment-payment
      - ReverseProxy__Clusters__paymentCluster__HttpRequest__ActivityTimeout=00:05:00
      - ReverseProxy__Clusters__plannerCluster__Destinations__destination1__Address=http://vms-planner
      - ReverseProxy__Clusters__plannerCluster__HttpRequest__ActivityTimeout=00:05:00
      - ReverseProxy__Clusters__productCluster__Destinations__destination1__Address=http://vms-product
      - ReverseProxy__Clusters__productCluster__HttpRequest__ActivityTimeout=00:05:00
      - ReverseProxy__Clusters__vehicleCluster__Destinations__destination1__Address=http://vms-vehicle
      - ReverseProxy__Clusters__vehicleCluster__HttpRequest__ActivityTimeout=00:05:00
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure  
    networks: 
      - arslan.vms-network

  vms-web:
    image: arslan.vms/app-web:latest
    container_name: vms-app-web-container
    build:
      context: ../../
      dockerfile: apps/angular1/Dockerfile
    volumes:
      - ./nginx/dynamic-env.json:/usr/share/nginx/html/dynamic-env.json
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks: 
      - arslan.vms-network

networks:
  arslan.vms-network:
    external: true
